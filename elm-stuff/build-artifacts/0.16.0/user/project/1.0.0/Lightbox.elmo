Elm.Lightbox = Elm.Lightbox || {};
Elm.Lightbox.make = function (_elm) {
   "use strict";
   _elm.Lightbox = _elm.Lightbox || {};
   if (_elm.Lightbox.values) return _elm.Lightbox.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $DOM = Elm.DOM.make(_elm),
   $Date = Elm.Date.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $Json$Decode = Elm.Json.Decode.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Streams = Elm.Streams.make(_elm);
   var _op = {};
   var messageOn = F3(function (name,addr,msg) {
      return A3($Html$Events.on,name,$Json$Decode.value,function (_p0) {    return A2($Signal.message,addr,msg);});
   });
   var updateVpSize = F2(function (newSize,model) {    return _U.update(model,{vpSize: $Maybe.Just(newSize)});});
   var getWidthHeight = A3($Json$Decode.object2,F2(function (dec1,dec2) {    return {ctor: "_Tuple2",_0: dec1,_1: dec2};}),$DOM.offsetWidth,$DOM.offsetHeight);
   var targetSrc = A2($Json$Decode.at,_U.list(["target","src"]),$Json$Decode.string);
   var onLoad = messageOn("load");
   var updateDefSize = function (model) {
      return _U.update(model,
      {defSize: A2($Maybe.withDefault,
      {ctor: "_Tuple2",_0: 800,_1: 600},
      function (_) {
         return _.picSize;
      }($Streams.current(function (_) {    return _.pictures;}(model))))});
   };
   var centerStyle = F3(function (vpSize,picSize,_p1) {
      var _p2 = _p1;
      var _p3 = vpSize;
      if (_p3.ctor === "Nothing") {
            return $Html$Attributes.style(_U.list([]));
         } else {
            var _p5 = _p3._0._0;
            var _p4 = picSize;
            if (_p4.ctor === "Nothing") {
                  return $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "position",_1: "absolute"}
                                                        ,{ctor: "_Tuple2",_0: "left",_1: A2($Basics._op["++"],$Basics.toString((_p5 - _p2._0) / 2),"px")}]));
               } else {
                  return $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "position",_1: "absolute"}
                                                        ,{ctor: "_Tuple2",_0: "left",_1: A2($Basics._op["++"],$Basics.toString((_p5 - _p4._0._0) / 2),"px")}]));
               }
         }
   });
   var responsivePic = function (vpSize) {
      var _p6 = vpSize;
      if (_p6.ctor === "Nothing") {
            return $Html$Attributes.style(_U.list([]));
         } else {
            return $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "max-height",_1: A2($Basics._op["++"],$Basics.toString(0.85 * _p6._0._1),"px")}]));
         }
   };
   var myStyle = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "animation",_1: "fadein 2s"}]));
   var blockScroll = function (act) {
      var _p7 = act;
      switch (_p7.ctor)
      {case "GoTo": return true;
         case "Left": return true;
         case "Right": return true;
         case "Loaded": return true;
         default: return false;}
   };
   var update = F2(function (action,model) {
      var model$ = updateDefSize(model);
      var _p8 = action;
      switch (_p8.ctor)
      {case "NoOp": return model;
         case "Left": return _U.update(model$,{pictures: $Streams.left(function (_) {    return _.pictures;}(model)),loading: true});
         case "Right": return _U.update(model$,{pictures: $Streams.right(function (_) {    return _.pictures;}(model)),loading: true});
         case "Close": return _U.update(model$,{display: false,loading: false});
         case "GoTo": var _p9 = _p8._0;
           return _U.update(model$,
           {pictures: A2($Streams.goTo,
           function (_) {
              return _.pictures;
           }(model),
           function (p) {
              return _U.eq(function (_) {    return _.filename;}(p),_p9);
           })
           ,display: true
           ,loading: $Basics.not(_U.eq(_p9,function (_) {    return _.filename;}($Streams.current(function (_) {    return _.pictures;}(model)))))});
         case "Zoomed": return _U.update(model,{zoomed: $Basics.not(function (_) {    return _.zoomed;}(model))});
         default: return _U.update(model,
           {loading: false
           ,pictures: function () {
              var old = $Streams.current(function (_) {    return _.pictures;}(model));
              return A2($Streams.updateCurrent,
              _U.update(old,{picSize: $Maybe.Just({ctor: "_Tuple2",_0: _p8._0._0,_1: _p8._0._1})}),
              function (_) {
                 return _.pictures;
              }(model));
           }()});}
   });
   var Loaded = function (a) {    return {ctor: "Loaded",_0: a};};
   var Zoomed = {ctor: "Zoomed"};
   var GoTo = function (a) {    return {ctor: "GoTo",_0: a};};
   var thumbs = F2(function (address,model) {
      var thumb = function (n) {
         return A2($Html.a,
         _U.list([A2($Html$Events.onClick,address,GoTo(n)),$Html$Attributes.href("#top")]),
         _U.list([A2($Html.img,
         _U.list([$Html$Attributes.src(A2($Basics._op["++"],
         "images/",
         A2($Basics._op["++"],function (_) {    return _.folder;}(model),A2($Basics._op["++"],"/thumbs/",n))))]),
         _U.list([]))]));
      };
      var nameList = function (_) {    return _.nameList;}(model);
      return A2($Html.div,_U.list([$Html$Attributes.$class("thumbs")]),A2($List.map,thumb,nameList));
   });
   var Close = {ctor: "Close"};
   var Right = {ctor: "Right"};
   var Left = {ctor: "Left"};
   var NoOp = {ctor: "NoOp"};
   var onKey = function (address) {
      var keyToAct = function (key) {    return _U.eq(key,13) || _U.eq(key,39) ? Right : _U.eq(key,37) ? Left : _U.eq(key,27) ? Close : NoOp;};
      return A2($Html$Events.onKeyDown,address,keyToAct);
   };
   var lightbox = F2(function (address,model) {
      var currentPic = $Streams.current(function (_) {    return _.pictures;}(model));
      return A2($Html.div,
      _U.list([$Html$Attributes.classList(_U.list([{ctor: "_Tuple2",_0: "lightbox",_1: true}
                                                  ,{ctor: "_Tuple2",_0: "display",_1: function (_) {    return _.display;}(model)}]))
              ,onKey(address)
              ,$Html$Attributes.tabindex(0)
              ,$Html$Attributes.autofocus(true)
              ,$Html$Attributes.id("lightbox")
              ,A2($Html$Attributes.attribute,"onresize","sendLightBoxSize()")]),
      _U.list([A2($Html.div,
      _U.list([$Html$Attributes.classList(_U.list([{ctor: "_Tuple2",_0: "lightbox-content",_1: true}
                                                  ,{ctor: "_Tuple2",_0: "lbzoomed",_1: function (_) {    return _.zoomed;}(model)}
                                                  ,{ctor: "_Tuple2",_0: "lbunzoomed",_1: $Basics.not(function (_) {    return _.zoomed;}(model))}]))
              ,onKey(address)
              ,$Html$Attributes.tabindex(0)
              ,$Html$Attributes.autofocus(true)
              ,$Html$Attributes.id("lightBC")
              ,A3(centerStyle,
              function (_) {
                 return _.vpSize;
              }(model),
              function (_) {
                 return _.picSize;
              }(currentPic),
              function (_) {
                 return _.defSize;
              }(model))]),
      _U.list([A2($Html.div,
              _U.list([$Html$Attributes.$class("picContainer"),$Html$Attributes.id("picContainer")]),
              _U.list([A2($Html.img,
                      _U.list([$Html$Attributes.src(A2($Basics._op["++"],
                              "images/",
                              A2($Basics._op["++"],
                              function (_) {
                                 return _.folder;
                              }(model),
                              A2($Basics._op["++"],"/",function (_) {    return _.filename;}(currentPic)))))
                              ,A3($Html$Events.on,"load",$DOM.target(getWidthHeight),function (_p10) {    return A2($Signal.message,address,Loaded(_p10));})
                              ,$Html$Attributes.classList(_U.list([{ctor: "_Tuple2",_0: "zoomed",_1: function (_) {    return _.zoomed;}(model)}
                                                                  ,{ctor: "_Tuple2"
                                                                   ,_0: "unzoomed"
                                                                   ,_1: $Basics.not(function (_) {    return _.zoomed;}(model))}]))
                              ,$Html$Attributes.id("lightboxPic")
                              ,responsivePic(function (_) {    return _.vpSize;}(model))]),
                      _U.list([]))
                      ,A2($Html.div,
                      _U.list([$Html$Attributes.$class("halfPic"),$Html$Attributes.id("halfPicleft"),A2($Html$Events.onClick,address,Left)]),
                      _U.list([A2($Html.span,_U.list([$Html$Attributes.$class("noselect")]),_U.list([$Html.text("<<")]))]))
                      ,A2($Html.div,
                      _U.list([$Html$Attributes.id("centerPic")]),
                      _U.list([A2($Html.span,_U.list([$Html$Attributes.$class("noselect")]),_U.list([$Html.text("=")]))]))
                      ,A2($Html.div,
                      _U.list([$Html$Attributes.$class("halfPic"),$Html$Attributes.id("halfPicright"),A2($Html$Events.onClick,address,Right)]),
                      _U.list([A2($Html.span,_U.list([$Html$Attributes.$class("noselect")]),_U.list([$Html.text(">>")]))]))]))
              ,A2($Html.div,
              _U.list([$Html$Attributes.$class("lightBoxcaption")]),
              _U.list([$Html.text(A2($Maybe.withDefault,"",function (_) {    return _.caption;}(currentPic)))
                      ,A2($Html.a,
                      _U.list([$Html$Attributes.id("closebtn"),$Html$Attributes.$class("noselect"),A2($Html$Events.onClick,address,Close)]),
                      _U.list([A2($Html.i,_U.list([$Html$Attributes.$class("fa fa-times")]),_U.list([]))]))
                      ,A2($Html.a,
                      _U.list([$Html$Attributes.classList(_U.list([{ctor: "_Tuple2",_0: "loader",_1: true}
                                                                  ,{ctor: "_Tuple2"
                                                                   ,_0: "display"
                                                                   ,_1: function (_) {
                                                                      return _.loading;
                                                                   }(model) && function (_) {
                                                                      return _.display;
                                                                   }(model)}]))]),
                      _U.list([function (_) {
                         return _.loading;
                      }(model) ? A2($Html.i,_U.list([$Html$Attributes.$class("fa fa-spinner fa-spin")]),_U.list([])) : A2($Html.i,
                      _U.list([]),
                      _U.list([]))]))]))]))]));
   });
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([$Html$Attributes.id("toto")]),
      _U.list([A2(thumbs,address,model)
              ,A2(lightbox,address,model)
              ,A2($Html.div,
              _U.list([$Html$Attributes.classList(_U.list([{ctor: "_Tuple2",_0: "fixedBack",_1: true}
                                                          ,{ctor: "_Tuple2",_0: "display",_1: function (_) {    return _.display;}(model)}]))]),
              _U.list([]))]));
   });
   var picCaption = F2(function (cs,ps) {
      var addCaption = function (p) {
         var caption = function () {
            var _p13 = $List.head(A2($List.filter,function (_p11) {    var _p12 = _p11;return _U.eq(function (_) {    return _.filename;}(p),_p12._0);},cs));
            if (_p13.ctor === "Nothing") {
                  return $Maybe.Nothing;
               } else {
                  return $Maybe.Just(_p13._0._1);
               }
         }();
         return _U.update(p,{caption: caption});
      };
      return A2($List.map,addCaption,ps);
   });
   var Picture = F6(function (a,b,c,d,e,f) {    return {filename: a,author: b,date: c,caption: d,linkHD: e,picSize: f};});
   var defPic = A6(Picture,"",$Maybe.Nothing,$Maybe.Nothing,$Maybe.Just(""),false,$Maybe.Nothing);
   var picList = function (n) {
      var go = function (m) {
         var filename = _U.cmp(n - m,10) < 0 ? A2($Basics._op["++"],"0",A2($Basics._op["++"],$Basics.toString(n - m),".jpg")) : A2($Basics._op["++"],
         $Basics.toString(n - m),
         ".jpg");
         var pic = _U.update(defPic,{filename: filename,caption: $Maybe.Just("")});
         return _U.eq(m,-1) ? _U.list([]) : A2($List._op["::"],pic,go(m - 1));
      };
      return go(n - 1);
   };
   var Model = F9(function (a,b,c,d,e,f,g,h,i) {
      return {pictures: a,nameList: b,folder: c,display: d,diaporama: e,loading: f,zoomed: g,vpSize: h,defSize: i};
   });
   var init = F3(function (pics,folder,vpSize) {
      var nameList = A2($List.map,function (_) {    return _.filename;},pics);
      return A9(Model,A2($Streams.biStream,pics,defPic),nameList,folder,false,false,false,false,$Maybe.Just(vpSize),{ctor: "_Tuple2",_0: 0,_1: 0});
   });
   return _elm.Lightbox.values = {_op: _op
                                 ,init: init
                                 ,update: update
                                 ,view: view
                                 ,defPic: defPic
                                 ,picList: picList
                                 ,picCaption: picCaption
                                 ,blockScroll: blockScroll
                                 ,updateVpSize: updateVpSize
                                 ,Picture: Picture
                                 ,Model: Model
                                 ,NoOp: NoOp
                                 ,Left: Left
                                 ,Right: Right
                                 ,Close: Close
                                 ,GoTo: GoTo
                                 ,Zoomed: Zoomed
                                 ,Loaded: Loaded};
};